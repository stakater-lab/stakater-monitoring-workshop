
apiVersion: monitoring.coreos.com/v1
kind: Prometheus
metadata:
  name: prometheus-NAMESPACE
  namespace: NAMESPACE
  labels:
    app: prometheus-NAMESPACE
    prometheus: prometheus-NAMESPACE
spec:
  resources:
    limit:
      memory: 100Mi
      cpu: 0.3
  retention: 300h
  serviceAccountName: prometheus-NAMESPACE
  serviceMonitorSelector:
    matchLabels:
      prometheus: prometheus-NAMESPACE
  nodeSelector:
    node-role.kubernetes.io/infra: "true"
  securityContext: {}

# apiVersion: monitoring.coreos.com/v1
# kind: Prometheus
# metadata:
#   name: prometheus-forwarder
#   namespace: NAMESPACE
#   labels:
#     app: prometheus-forwarder
#     prometheus: prometheus-forwarder
# spec:
#   secrets:
#   - prometheus-k8s-tls
#   - prometheus-k8s-proxy
#   - prometheus-k8s-htpasswd
#   containers:
#   - args:
#     - -provider=openshift
#     - -https-address=:9091
#     - -http-address=
#     - -email-domain=*
#     - -upstream=http://localhost:9090
#     - -htpasswd-file=/etc/proxy/htpasswd/auth
#     - -openshift-service-account=prometheus-k8s
#     - '-openshift-sar={"resource": "namespaces", "verb": "get"}'
#     - '-openshift-delegate-urls={"/": {"resource": "namespaces", "verb": "get"}}'
#     - -tls-cert=/etc/tls/private/tls.crt
#     - -tls-key=/etc/tls/private/tls.key
#     - -client-secret-file=/var/run/secrets/kubernetes.io/serviceaccount/token
#     - -cookie-secret-file=/etc/proxy/secrets/session_secret
#     - -openshift-ca=/etc/pki/tls/cert.pem
#     - -openshift-ca=/var/run/secrets/kubernetes.io/serviceaccount/ca.crt
#     - -skip-auth-regex=^/metrics
#     image: openshift/oauth-proxy:v1.1.0
#     name: prometheus-proxy
#     ports:
#     - containerPort: 9091
#       name: web
#     resources: {}
#     volumeMounts:
#     - mountPath: /etc/tls/private
#       name: secret-prometheus-k8s-tls
#     - mountPath: /etc/proxy/secrets
#       name: secret-prometheus-k8s-proxy
#     - mountPath: /etc/proxy/htpasswd
#       name: secret-prometheus-k8s-htpasswd
#   resources:
#     limit:
#       memory: 100Mi
#       cpu: 0.3
#   retention: 300h
#   serviceAccountName: prometheus-k8s
#   # remoteWrite:
#   #   - url: "http://influxdb.storage.svc:8086/api/v1/prom/write?db=prometheus"
#   serviceMonitorSelector:
#     matchLabels:
#       prometheus: prometheus-forwarder
#   nodeSelector:
#     node-role.kubernetes.io/infra: "true"
#   securityContext: {}